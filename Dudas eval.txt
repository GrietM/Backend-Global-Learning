DUDAS EVALUATIVO GLOBAL LEARNING:

me mude a la maquina nueva... mi base de datos no tiene ningun usuario cargado y yo le estoy pidiendo loggear un nuevo usuario pero 
tengo una logica que le pide que ya exista....?? En realidad no... en la otra PC si pude cargar uno nuevo 

 if( foundUser && foundUser.password == req.body.password){ // tengo que reemplazar una parte de este if con el COMPARE de bcrypt!
            //para generar el token
            const tokenUser = {
              firstName: foundUser.firstName,
              lastName: foundUser.lastName,
              userName: foundUser.userName
            }
            const isPswdCorrect = bcrypt.compare(body.password, foundUser)
            
            console.log(isPswdCorrect)

            const token = jwt.sign(tokenUser, '123456marcela' , {expiresIn: '1h'});

            return res.status(202).json({message:'OK', token: token})  
            
          }
         else /*if(!foundUser)*/{
          return res.status(202).json({message: !foundUser ? 'Invalid user' : 'Credenciales inválidas'})
         }

Sale por : 'Invalid user' 

QUIZAS NO TIENE SENTIDO LO Q LE ESTABA PIDIENDO... PORQ OBVIO Q NO LO VA A DEJAR LOGGEARSE SI NO LO CONCOE. DEBERIA HABER HECHO UN POST EN USERS Y NO EN LOGIN! ---> MALA MIA



IR EN ORDEN. 

El enunciado no pide encriptaciones de contraseñas??


minuto 1.06 del ultimo video---> spread! ...body ---> en wsp anotaciones tengo fotos del codigo de lucas para emprolijar esto

El tema de los headers para probar el auth con el token, defino un tiempo de expiracion, hago un login y de ahi me voy a otrs metodos/endopints y veo si expira. Tmb puedo ver q me dice si cargo un token invalido y tratar de rescatar ese mensaje como hizo Fede.

Dejar el token largo para que no me deje afuera y dejar comentado que ahi lo cambiabamos para probar el tema de auth. (sino tendriamos q renovar el token cada tanto) 

validaciones de los params (mi consulta en el minuto 1:52 de la ultima clase)
ver que mis validaciones funciones en las "distintas etapas": en el router, en el controlador, en la base de datos.

Armar repositorio de github con diferentes commits

Acomodar eslint de Lucas

Ver el tema de los try catch y si puedo mejorar el manejo de errores

ya probe que todo funciona pasandoles coordenadas correctas... ahora tratar de romper...

ver los numeros de los errores que devuelvo en los mensjaes http

Corregir el nombre del endpoint user al plural: userS. El de bookS si esta en plural... no estoy segura en realidad... cuando hago un post de un user nuevo por ejemplo es singular... o cuando busco BY ID ahi si es singular segurisimo!

chequear que el mail sea unico? el usuario sea unico?

- ver el tema de desencriptar la cntraseña! Los primeros usuarios que ya tengo guardados en la base de adtaos no tienen encriptada la contraseña entonces si hago un postUSer login, me deja entrar sin problema poniendo. Despues, si pruebo con hermenegildo no me dej aporq ya esta encriptada y al compararlas son diferente por eso "Credenciales invalidas".Ademas hay un problema que si pongo solo userName y pssw a veces no me lo toma?? 

- acomodar los controladores con funciones mas chicas tipo: user creator, token creator, etc --> en wsp anotaciones tengo fotos del codigo de lucas para emprolijar esto!

- borrar los console.log una vez terminando

3- mongoose para q cuando guarde se resetee?? NODEMON

puedo poner dos veces el mismo campo cuando hago un post y ni cuenta se va a dar

los validadores de query y put temrinan siendo lo mismo y lo mismo que body pero sin los required.ver como hacerlo mas eficiente

para usar los query string hay q ser estrcito con los espacios y las matusculas... ver si puedo ignorar esas cosas...

quiero reutilizar el "encryptedpsw" y el "newUserName" del Post user en los PUT by ID. los puedo declarar como funciones fuera del método..?
Al menos deberia volver a poner el encriptador! Sino los usuarios actualizados, si le cargo todos los campos quedan con la contraseña desencriptada!

agregar validaciones de LOGIN! --> userName y password REQUIRED!

